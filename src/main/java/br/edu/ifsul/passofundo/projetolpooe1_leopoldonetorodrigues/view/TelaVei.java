/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.ifsul.passofundo.projetolpooe1_leopoldonetorodrigues.view;

import br.edu.ifsul.passofundo.projetolpooe1_leopoldonetorodrigues.dao.PersistenciaJPA;

import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import model.Veiculo;
import model.Tipo;
/**
 *
 * @author leo
 */
public class TelaVei extends javax.swing.JFrame {
    
    PersistenciaJPA jpa = new PersistenciaJPA();
    
    /**
     * Creates new form TelaFunc
     */
    public TelaVei() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddVeiculo = new javax.swing.JButton();
        btnEditarVeiculo = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVeiculos = new javax.swing.JTable();
        lblTitulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAddVeiculo.setText("Novo");
        btnAddVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVeiculoActionPerformed(evt);
            }
        });

        btnEditarVeiculo.setText("Editar");
        btnEditarVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarVeiculoActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        tblVeiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Placa", "Tipo", "Marca", "Descricao", "Cor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblVeiculos);

        lblTitulo.setText("Veiculos");

        jLabel2.setText("Placa:");

        txtPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPlacaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnAddVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnEditarVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPlaca))
                    .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddVeiculo)
                    .addComponent(btnEditarVeiculo)
                    .addComponent(btnRemover))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVeiculoActionPerformed
        TelaCadVei tela = new TelaCadVei(this, rootPaneCheckingEnabled);
        tela.setVisible(true);

        loadVeiculosCadastrados();
    }//GEN-LAST:event_btnAddVeiculoActionPerformed

    private void btnEditarVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarVeiculoActionPerformed

        Veiculo veiculoSel = getVeiculoSelecionado();
        if (veiculoSel != null) {
            TelaCadVei tela = new TelaCadVei(this, rootPaneCheckingEnabled);
            tela.setVeiculo(veiculoSel);
            tela.setVisible(true);
            loadVeiculosCadastrados(); // Atualiza a tabela após edição

        }
    }//GEN-LAST:event_btnEditarVeiculoActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
//        Veiculo veiculoSel = getVeiculoSelecionado();
//        if (veiculoSel != null) {
//            int delOp = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja remover veículo " + veiculoSel + "?");
//            if (delOp == JOptionPane.YES_OPTION) {
//                jpa.conexaoAberta();
//                try {
//
//                    // Passo 1: Desvincular relacionamentos e salvar as alterações
//                    if (veiculoSel.getProprietario() != null || veiculoSel.getModelo() != null) {
//                        veiculoSel.setProprietario(null);
//                        veiculoSel.setModelo(null);
//
//                        /*
//                        Após setar os relacionamentos para null, o estado do objeto pode ter sido alterado,
//                        e ele não está mais sendo tratado como parte do contexto de persistência (EntityManager).
//                        Isso ocorre porque as modificações não foram sincronizadas com o banco antes da tentativa de remoção.
//
//                        Ao modificar os relacionamentos (setar para null), essas alterações precisam ser sincronizadas com o banco antes de tentar a remoção
//                        */
//                        jpa.persist(veiculoSel);
//                        jpa.fecharConexao();
//
//                        jpa.conexaoAberta();
//                    }
//
//                    // Passo 2: Remover o objeto
//                    jpa.remover(veiculoSel);
//                    JOptionPane.showMessageDialog(rootPane, "Veículo removido com sucesso!");
//
//                    loadVeiculosCadastrados(); // Atualiza a tabela
//                } catch (Exception e) {
//                    e.printStackTrace();
//                    System.err.println("Erro ao remover veículo " + veiculoSel + "\nErro: " + e.getMessage());
//                } finally {
//                    jpa.fecharConexao();
//                }
//
//            }
//        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void txtPlacaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaKeyReleased
        
    }//GEN-LAST:event_txtPlacaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVei.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVei.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVei.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVei.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVei().setVisible(true);
            }
        });
    }
    
    public void loadVeiculosCadastrados() {
    // Abre a conexão
    jpa.conexaoAberta();
    try {
        // Busca os veículos cadastrados
        List<Veiculo> listaVeiculos = jpa.getVeiculos(); // Método criado no DAO

        // Obtém o modelo da tabela
        DefaultTableModel modeloTabela = (DefaultTableModel) tblVeiculos.getModel();

        // Limpa a tabela
        modeloTabela.setRowCount(0);

        // Adiciona os veículos ao modelo da tabela
        for (Veiculo veiculo : listaVeiculos) {
            Object[] linha = {
                veiculo.getPlaca(),
                veiculo.getTipo(),
                veiculo.getMarca(),
                veiculo.getDescricao(),
                veiculo.getCor()
            };
            modeloTabela.addRow(linha);
        }

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao carregar os veículos: " + e.getMessage());
    } finally {
        // Fecha a conexão
        jpa.fecharConexao();
    }
}


public Veiculo getVeiculoSelecionado() {
    int linhaSelecionada = tblVeiculos.getSelectedRow(); // Obtém a linha selecionada
    if (linhaSelecionada >= 0) { // Quando não tem nenhum objeto selecionado retorna -1
        DefaultTableModel modeloTabela = (DefaultTableModel) tblVeiculos.getModel();
        // O Veiculo está na primeira coluna (índice 0) da tabela
        String placaSelecionada = (String) modeloTabela.getValueAt(linhaSelecionada, 0); // Recupera a placa
        // Realiza a busca pelo veículo, com base na placa (ou outros atributos, dependendo da necessidade)
        Veiculo veiculoSelecionado = jpa.getVeiculoByPlaca(placaSelecionada); // Método no DAO que busca o veículo pela placa
        
        return veiculoSelecionado;
    } else {
        JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada.");
        return null;
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddVeiculo;
    private javax.swing.JButton btnEditarVeiculo;
    private javax.swing.JButton btnRemover;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblVeiculos;
    private javax.swing.JTextField txtPlaca;
    // End of variables declaration//GEN-END:variables
}
